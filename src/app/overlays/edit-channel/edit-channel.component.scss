.mat-mdc-dialog-surface {
    border-top-left-radius: 0 !important;
}

.overlay-content {
    width: 100%;
    gap: 1.25rem;
    padding: 2.5rem;
    box-sizing: border-box;
}

.header {
    height: 2.5rem;
}

.channel {
    height: 100%;
    gap: 0.9375rem;
}

.icon-size {
    height: 1.875rem;
    width: 1.875rem;
}

.icon {
    height: 1.5rem;
    width: 1.5rem;
    margin-right: 0.625rem;
}

p, h2, h3, h4, span {
    margin: 0;
    font-family: "nunito";
    font-size: 1.5rem;
    font-weight: 700;
}

p, h3, span {
    font-size: 1.125rem;
}

p, span, h4 {
    font-weight: 400;
    min-height: 1.5625rem;
}

h4 {
    line-height: 2.0625rem;;
    color: #535AF1;
}

.close-container {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;;
    cursor: pointer;

    &:hover {
        background-color: #eceefe;

        .close-icon {
            filter: brightness(0) saturate(100%) invert(39%) sepia(62%) saturate(4751%) hue-rotate(227deg) brightness(95%) contrast(99%);
        }
    } 
}

.close-icon {
    width: 1.5rem;
    height: 1.5rem;
    padding: 0.313rem;
    box-sizing: border-box;
}

.channel-name, .description-container {
    height: 7.125rem;
    border-radius: 1.25rem;
    border: 1px solid #ADB0D9;
    padding: 1.25rem;
    box-sizing: border-box;
}

.description-container {
    height: 100%;
}

.description-content {
    min-height: 1.5625rem;
}

.name-container {
    height: 1.5625rem;
}

.to-work-container {
  	width: 5.2rem;
}

a {
    color: #535AF1;
    text-decoration: none;
    font-family: "nunito";
    font-weight: 600;
    
    &:hover {
        font-weight: 700;
    }
}

.line-container {
    height: 3.625rem;
    width: 100%;
    padding: 1.8125rem 0;
    box-sizing: border-box;
}

.line {
    height: 0.125rem;
    width: 100%;
    background-color: #ADB0D9;
}

.created-by, .description {
    min-height: 4.875rem;
}

.button-position {
    display: flex;
    justify-content: flex-end;
}

.input-wrapper {
    position: relative;
    height: 7.125rem;
    display: flex;
    align-items: end;
}
  
.input-wrapper input {
    width: 100%;
    box-sizing: border-box;
    
    &:focus {
        outline: 0px solid #535AF1;
        border: 1px solid #535AF1;
    }
}

.input-channel-name {
    height: 7.125rem;
    border-radius: 1.25rem;
    border: 1px solid #ADB0D9;
    padding: 1.25rem 1.25rem 1.25rem 3.5rem;
}

.animation-inputfield-in {
    height: 7.125rem;
    border-radius: 1.25rem;
    border: 1px solid #ADB0D9;
    padding: 1.25rem 1.25rem 1.25rem 3.5rem;
    animation: animationInputfieldIn 1.5s forwards,
               animateMarginBottomIn 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animationInputfieldIn {
    from {
        height: 7.125rem;
        border-radius: 1.25rem;
        background-color: #faf9fd;
    }
    to {
        height: 3.75rem;
        border-radius: 1.875rem;
        background-color: #faf9fd;
    }
}

@keyframes animateMarginBottomIn {
    from {
        margin-bottom: 0;
    }
    to {
        margin-bottom: 0.5625rem;
    }
}

.animation-inputfield-out {
    height: 7.125rem;
    border-radius: 1.25rem;
    border: 1px solid #ADB0D9;
    padding: 1.25rem 1.25rem 1.25rem 3.5rem;
    animation: animationInputfieldOut 1.5s forwards,
               animateMarginBottomOut 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animationInputfieldOut {
    from {
        height: 3.75rem;
        border-radius: 1.875rem;
        background-color: #faf9fd;
    }
    to {
        height: 7.125rem;
        border-radius: 1.25rem;
        background-color: #faf9fd;
    }
}

@keyframes animateMarginBottomOut {
    from {
        margin-bottom: 0.5625rem;
    }
    to {
        margin-bottom: 0;        
    }
}

label {
    line-height: 1.125rem;
    left: 3.5rem; 
    margin-bottom: 1.25rem; 
}

.animation-label-in {
    animation: animateLabelIn 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animateLabelIn {
    from {
        margin-bottom: 1.25rem;
    }
    to {
        margin-bottom: 1.8125rem;
    }
}

.animation-label-out {
    animation: animateLabelOut 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animateLabelOut {
    from {
        margin-bottom: 1.8125rem;
    }
    to {
        margin-bottom: 1.25rem;
    }
}

.font-input, label {
    font-family: 'nunito';
    font-size: 1.125rem;
    font-weight: 400;
    color: black;
}

.input-wrapper label {
    position: absolute;
    pointer-events: none;
    transition: 0.2s ease;
}

input:focus + label {
    visibility: hidden;
    opacity: 0;
    font-family: 'nunito';
    font-size: 1.125rem;
    font-weight: 400;
}

.input-icon {
    position: absolute;
    left: 1.25rem;
    height: 1.5rem;
    width: 1.5rem;
    border: none;
    margin-bottom: 1.1rem;
}

.input-icon-animation-in {
    animation: animateTagIn 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animateTagIn {
    from {
        margin-bottom: 1.1rem;
    }
    to {
        margin-bottom: 1.6625rem;
    }
}

.input-icon-animation-out {
    animation: animateTagOut 1.5s forwards;
    animation-iteration-count: 1;
    margin-bottom: 0;
}

@keyframes animateTagOut {
    from {
        margin-bottom: 1.6625rem;
    }
    to {
        margin-bottom: 1.1rem;
    }
}

.edit-channel-name {
    position: absolute;
    width: calc(100% - 2.5rem);
    top: 1.25rem;
    left: 1.25rem;
    height: 1.5625rem;
    padding-right: 1.25rem;
}

.animation-edit-channel-in {
    animation: animationEditChannelIn 1.5s forwards;
    animation-iteration-count: 1;
    transform-origin: bottom;
}

@keyframes animationEditChannelIn {
    from {
        transform: translate(0,0);    
        padding-right: 1.25rem;
    }
    to {
        transform: translate(-1.25rem,-1.5625rem);
        width: calc(100% - 1.25rem);
    }
}

.animation-edit-channel-out {
    animation: animationEditChannelOut 1.5s forwards;
    animation-iteration-count: 1;
    transform-origin: bottom;
}

@keyframes animationEditChannelOut {
        from {
            transform: translate(-1.25rem,-1.5625rem);
            width: calc(100% - 1.25rem);
        }
        to {
            transform: translate(0,0);
            width: calc(100% - 2.5rem);
    }
}